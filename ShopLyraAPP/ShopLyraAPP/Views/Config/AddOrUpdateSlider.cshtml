@model ShopLyraAPP.Models.Slider

@{
    ViewBag.Title = "AddOrUpdateSlider";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

<h2 id="title"></h2>

<form action="/config/AddOrUpdateSlider" method="post" enctype="multipart/form-data">

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="Image" onchange="loadFile(event)" />
                <div id="images-group">
                    <div class="row no-gutters">
                        @if (Model != null)
                        {
                            <div class="multiple-images-wrapper col-md-2">
                                <img src="/images/Slider/@Model.Image" class="multipleImage img-thumbnail" />
                                <a href="javascript:;" id="@Model.ID" class="btn btn-outline-dark" onclick="delImage(@Model.ID)">
                                    <span>x</span>
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortContent, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="createdate">
            @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="modifiledate">
            @Html.LabelFor(model => model.Modifiledate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modifiledate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modifiledate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="modifileby">
            @Html.LabelFor(model => model.ModifileBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifileBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifileBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Hot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <button class="btn btn-lg" type="submit" id="btnSubmit"></button>
        </div>
    </div>
</form>

<div>
    <a href="/Config/Slider" class="btn btn-outline-info">Quay lại</a>
</div>

<style>
    #modifileby, #modifiledate {
        display: none;
    }

        #modifiledate.active,
        #modifileby.active {
            display: block;
        }

    #createdate.display {
        display: none;
    }
</style>
@section scripts{
    <script>
        if ($("#ID").val() > 0) {
            $("#createdate").addClass("display");
            $("#modifileby").addClass("active");
            $("modifiledate").addClass("active");
            $("#title").html("Sửa thông tin liên hệ");
            $("#btnSubmit").html('<i class="far fa-pen-square mr-1"></i>Lưu thay đổi');
            $("#btnSubmit").addClass("btn-primary")
        }
        else {
            $("#ID").val(0);
            $("#title").html("Thêm mới thông tin liên hệ");
            $("#btnSubmit").html('<i class="far fa-plus mr-1"></i> Thêm mới');
            $("#btnSubmit").addClass("btn-success")
        }

        function loadFile(event) {
            var files = event.target.files;
            var acceptFileTypes = /^image\/(gif|jpe?g|png)$/i;
            if (files[0]["type"].length && !acceptFileTypes.test(files[0]["type"])) {
                alert("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                return false;
            }
            if (files["size"] > 4000000) {
                alert("Dung lượng ảnh lớn hơn 4MB");
                return false;
            }
            $("#images-group .row")
                .html('<div class="multiple-images-wrapper col-md-2"><img src="' + URL.createObjectURL(event.target.files[0]) + '" class="multipleImage img-thumbnail" /><a href="javascript:;" id="' + 0 + '" class="btn btn-outline-dark" onclick="deleteImage(' + 0 + ')"><span>x</span></a></div>');
        }
        function deleteImage(divid) {
            if (confirm('Bạn có chắc xóa ảnh này?')) {
                $('#' + divid).parent().fadeOut().remove();
            }
        }


        function delImage(imgID) {
            if (confirm("Bạn có chắc muốn xóa ảnh không?(Sẽ xóa luôn trên server)")) {
                $.ajax({
                    type: "Post",
                    url: "/config/deleteImageSlider",
                    data: { id: imgID },
                    success: function (res) {
                        if (res == true) {
                            alert("Xóa thành công!");
                            $('#' + imgID).parent().fadeOut().remove();
                        }
                    }
                })
            }
        }

    </script>
}