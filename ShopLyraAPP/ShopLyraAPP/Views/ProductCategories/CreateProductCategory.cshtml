@using ShopLyraAPP.Models;
@model ProductCategory

@{
    ViewBag.Title = "CreateProductCategory";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}


<form action="@Url.Action("CreateProductCategory", "ProductCategories")" method="post" id="formData" enctype="multipart/form-data">

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="mt-3" type="file" name="Image" id="Image"  />
                <div id="images-group">
                    <div class="row no-gutters">
                    </div>
                </div>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="mt-3" type="file" name="Logo" id="Logo"  />
                <div id="logo-group">
                    <div class="row no-gutters">

                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateBy, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShowOnHome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShowOnHome, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-lg btn-success">Thêm mới</button>
        </div>
    </div>
</form>

<div>
    <a href="/ProductCategories/Index" class="btn btn-outline-info">Quay lại</a>
</div>

@section scripts{
    <script>
        function loadFile(event) {
            var files = event.target.files;
            var acceptFileTypes = /^image\/(gif|jpe?g|png|svg)$/i;
            for (var i = 0; i < files.length; i++) {
                if (files[0]["type"].length && !acceptFileTypes.test(files[0]["type"])) {
                    alert("Chỉ chấp nhận định dạng jpeg, jpg, png, gif,svg");
                    return false;
                }
                if (files[0]["size"] > 4000000) {
                    alert("Dung lượng ảnh lớn hơn 4MB");
                    return false;
                }
                $("#images-group .row").html('<div class="multiple-images-wrapper col-md-2"><img src="' + URL.createObjectURL(event.target.files[0]) + '" class="multipleImage img-thumbnail" /><a href="javascript:;" id="0" class="btn btn-outline-dark" onclick="deleteImage(0)"><span>x</span></a></div>');
            }
        }
        function loadLogo(event) {
            var files = event.target.files;
            var acceptFileTypes = /^image\/(gif|jpe?g|png|svg)$/i;
            for (var i = 0; i < files.length; i++) {
                if (files[0]["type"].length && !acceptFileTypes.test(files[0]["type"])) {
                    alert("Chỉ chấp nhận định dạng jpeg, jpg, png, gif,svg");
                    return false;
                }
                if (files[0]["size"] > 4000000) {
                    alert("Dung lượng ảnh lớn hơn 4MB");
                    return false;
                }
                $("#logo-group .row").html('<div class="multiple-images-wrapper col-md-2"><img src="' + URL.createObjectURL(event.target.files[0]) + '" class="multipleImage img-thumbnail" /><a href="javascript:;" id="1" class="btn btn-outline-dark" onclick="deleteImage(1)"><span>x</span></a></div>');
            }
        }
        function deleteImage(divid) {
            if (confirm('Bạn có chắc xóa ảnh này?')) {
                $('#' + divid).parent().fadeOut().remove();
            }
        }
    </script>
}